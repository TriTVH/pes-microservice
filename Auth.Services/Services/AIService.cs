using Auth.Services.DTOs.AI;
using Auth.Services.Services.IServices;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Logging;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Text;
using System.Text.Json;
using System.Threading.Tasks;

namespace Auth.Services.Services
{
    public class AIService : IAIService
    {
        private readonly IConfiguration _configuration;
        private readonly ILogger<AIService> _logger;
        private readonly string _apiKey;
        private readonly string _baseUrl;
        private readonly string _model;
        private readonly string _projectId;

        public AIService(IConfiguration configuration, ILogger<AIService> logger)
        {
            _configuration = configuration;
            _logger = logger;
            _apiKey = _configuration["Gemini:ApiKey"] ?? throw new InvalidOperationException("Gemini API Key not configured");
            _baseUrl = _configuration["Gemini:BaseUrl"] ?? "https://generativelanguage.googleapis.com";
            _model = _configuration["Gemini:Model"] ?? "gemini-2.5-flash";
            _projectId = _configuration["Gemini:ProjectId"] ?? "pes-microservice";
        }

        public async Task<ChatResponseDto> ChatAsync(ChatRequestDto request)
        {
            try
            {
                var systemPrompt = await GetSystemPromptAsync();
                var userMessage = request.Message;
                var sessionId = request.SessionId ?? Guid.NewGuid().ToString();

                // Prepare the prompt with system context
                var fullPrompt = $"{systemPrompt}\n\nUser Question: {userMessage}";

                // Call Gemini API
                var response = await CallGeminiAPIAsync(fullPrompt);

                // Extract related topics and suggested actions
                var relatedTopics = ExtractRelatedTopics(userMessage);
                var suggestedActions = GenerateSuggestedActions(userMessage, request.UserRole);

                return new ChatResponseDto
                {
                    Response = response,
                    SessionId = sessionId,
                    Timestamp = DateTime.UtcNow,
                    SuggestedActions = suggestedActions,
                    RelatedTopics = relatedTopics
                };
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error in AI chat service");
                return new ChatResponseDto
                {
                    Response = "Xin l·ªói, t√¥i g·∫∑p s·ª± c·ªë k·ªπ thu·∫≠t. Vui l√≤ng th·ª≠ l·∫°i sau.",
                    SessionId = request.SessionId ?? Guid.NewGuid().ToString(),
                    Timestamp = DateTime.UtcNow,
                    SuggestedActions = "Th·ª≠ l·∫°i sau ho·∫∑c li√™n h·ªá h·ªó tr·ª£ k·ªπ thu·∫≠t",
                    RelatedTopics = new List<string> { "H·ªó tr·ª£ k·ªπ thu·∫≠t", "L·ªói h·ªá th·ªëng" }
                };
            }
        }

        private async Task<string> CallGeminiAPIAsync(string prompt)
        {
            try
            {
                using var httpClient = new HttpClient();
                httpClient.DefaultRequestHeaders.Add("x-goog-api-key", _apiKey);

                var requestBody = new
                {
                    contents = new[]
                    {
                        new
                        {
                            parts = new[]
                            {
                                new { text = prompt }
                            }
                        }
                    },
                    generationConfig = new
                    {
                        temperature = 0.7,
                        topK = 40,
                        topP = 0.95,
                        maxOutputTokens = 1024
                    }
                };

                var json = JsonSerializer.Serialize(requestBody);
                var content = new StringContent(json, Encoding.UTF8, "application/json");

                var response = await httpClient.PostAsync(
                    $"{_baseUrl}/v1beta/models/{_model}:generateContent?key={_apiKey}",
                    content);

                if (response.IsSuccessStatusCode)
                {
                    var responseContent = await response.Content.ReadAsStringAsync();
                    var geminiResponse = JsonSerializer.Deserialize<GeminiResponse>(responseContent);
                    
                    if (geminiResponse?.candidates?.Length > 0)
                    {
                        return geminiResponse.candidates[0].content.parts[0].text;
                    }
                }

                return "Xin l·ªói, t√¥i kh√¥ng th·ªÉ x·ª≠ l√Ω y√™u c·∫ßu c·ªßa b·∫°n l√∫c n√†y.";
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "Error calling Gemini API");
                return "Xin l·ªói, c√≥ l·ªói x·∫£y ra khi k·∫øt n·ªëi v·ªõi AI service.";
            }
        }

        public async Task<string> GetSystemPromptAsync()
        {
            var systemPrompt = new StringBuilder();
            
            systemPrompt.AppendLine("B·∫°n l√† AI Assistant th√¥ng minh cho h·ªá th·ªëng PES (Primary Education System) - H·ªá th·ªëng qu·∫£n l√Ω gi√°o d·ª•c ti·ªÉu h·ªçc.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("=== C√ÅCH TR·∫¢ L·ªúI TH√îNG MINH ===");
            systemPrompt.AppendLine("1. Ph√¢n t√≠ch c√¢u h·ªèi ƒë·ªÉ hi·ªÉu √Ω ƒë·ªãnh th·ª±c s·ª± c·ªßa ng∆∞·ªùi d√πng");
            systemPrompt.AppendLine("2. Tr·∫£ l·ªùi d·ª±a tr√™n ng·ªØ c·∫£nh v√† th√¥ng tin c√≥ s·∫µn");
            systemPrompt.AppendLine("3. ƒê∆∞a ra g·ª£i √Ω ph√π h·ª£p v·ªõi t·ª´ng t√¨nh hu·ªëng c·ª• th·ªÉ");
            systemPrompt.AppendLine("4. S·ª≠ d·ª•ng th√¥ng tin t·ª´ c√¢u h·ªèi ƒë·ªÉ c√° nh√¢n h√≥a c√¢u tr·∫£ l·ªùi");
            systemPrompt.AppendLine("5. K·∫øt h·ª£p nhi·ªÅu ngu·ªìn th√¥ng tin ƒë·ªÉ ƒë∆∞a ra l·ªùi khuy√™n to√†n di·ªán");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("=== GI·ªöI THI·ªÜU H·ªÜ TH·ªêNG PES ===");
            systemPrompt.AppendLine("PES l√† h·ªá th·ªëng qu·∫£n l√Ω gi√°o d·ª•c ti·ªÉu h·ªçc hi·ªán ƒë·∫°i, gi√∫p k·∫øt n·ªëi ph·ª• huynh, gi√°o vi√™n v√† nh√† tr∆∞·ªùng trong vi·ªác qu·∫£n l√Ω h·ªçc t·∫≠p c·ªßa h·ªçc sinh.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("=== C√ÅC VAI TR√í TRONG H·ªÜ TH·ªêNG ===");
            systemPrompt.AppendLine("üë®‚Äçüë©‚Äçüëß‚Äçüë¶ PH·ª§ HUYNH: Qu·∫£n l√Ω th√¥ng tin con em, ƒëƒÉng k√Ω nh·∫≠p h·ªçc, thanh to√°n h·ªçc ph√≠");
            systemPrompt.AppendLine("üë©‚Äçüè´ GI√ÅO VI√äN: Qu·∫£n l√Ω l·ªõp h·ªçc, l·ªãch d·∫°y, ho·∫°t ƒë·ªông h·ªçc t·∫≠p");
            systemPrompt.AppendLine("üë®‚Äçüíº NH√ÇN S·ª∞ (HR): Qu·∫£n l√Ω t√†i kho·∫£n gi√°o vi√™n, tuy·ªÉn d·ª•ng");
            systemPrompt.AppendLine("üë®‚Äçüíª QU·∫¢N L√ù GI√ÅO D·ª§C: Qu·∫£n l√Ω ch∆∞∆°ng tr√¨nh h·ªçc, l·ªõp h·ªçc, ƒë·ª£t tuy·ªÉn sinh");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("=== H∆Ø·ªöNG D·∫™N CHO NG∆Ø·ªúI D√ôNG M·ªöI ===");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("üè† CHO PH·ª§ HUYNH:");
            systemPrompt.AppendLine("1. ƒêƒÇNG K√ù T√ÄI KHO·∫¢N:");
            systemPrompt.AppendLine("   - Truy c·∫≠p trang web PES");
            systemPrompt.AppendLine("   - Nh·∫•n 'ƒêƒÉng k√Ω ph·ª• huynh'");
            systemPrompt.AppendLine("   - ƒêi·ªÅn th√¥ng tin: Email, m·∫≠t kh·∫©u, h·ªç t√™n, ngh·ªÅ nghi·ªáp, m·ªëi quan h·ªá v·ªõi con (Cha/M·∫π)");
            systemPrompt.AppendLine("   - X√°c nh·∫≠n email ƒë·ªÉ k√≠ch ho·∫°t t√†i kho·∫£n");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("2. ƒêƒÇNG K√ù NH·∫¨P H·ªåC CHO CON:");
            systemPrompt.AppendLine("   - ƒêƒÉng nh·∫≠p v√†o t√†i kho·∫£n");
            systemPrompt.AppendLine("   - V√†o m·ª•c 'Qu·∫£n l√Ω h·ªçc sinh'");
            systemPrompt.AppendLine("   - T·∫°o h·ªì s∆° h·ªçc sinh v·ªõi th√¥ng tin c√° nh√¢n");
            systemPrompt.AppendLine("   - Ch·ªçn ƒë·ª£t tuy·ªÉn sinh ph√π h·ª£p");
            systemPrompt.AppendLine("   - ƒêi·ªÅn ƒë∆°n ƒëƒÉng k√Ω nh·∫≠p h·ªçc");
            systemPrompt.AppendLine("   - Thanh to√°n h·ªçc ph√≠ qua VnPay");
            systemPrompt.AppendLine("   - Nh·∫≠n x√°c nh·∫≠n nh·∫≠p h·ªçc");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("3. THEO D√ïI H·ªåC T·∫¨P:");
            systemPrompt.AppendLine("   - Xem l·ªãch h·ªçc c·ªßa con");
            systemPrompt.AppendLine("   - Theo d√µi ho·∫°t ƒë·ªông h·ªçc t·∫≠p");
            systemPrompt.AppendLine("   - Nh·∫≠n th√¥ng b√°o t·ª´ gi√°o vi√™n");
            systemPrompt.AppendLine("   - Xem b√°o c√°o h·ªçc t·∫≠p");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("üë©‚Äçüè´ CHO GI√ÅO VI√äN:");
            systemPrompt.AppendLine("1. ƒêƒÇNG K√ù L√ÄM GI√ÅO VI√äN:");
            systemPrompt.AppendLine("   - Li√™n h·ªá b·ªô ph·∫≠n nh√¢n s·ª± (HR) c·ªßa tr∆∞·ªùng");
            systemPrompt.AppendLine("   - N·ªôp h·ªì s∆° ·ª©ng tuy·ªÉn");
            systemPrompt.AppendLine("   - Tham gia ph·ªèng v·∫•n");
            systemPrompt.AppendLine("   - Sau khi ƒë∆∞·ª£c tuy·ªÉn d·ª•ng, HR s·∫Ω t·∫°o t√†i kho·∫£n cho b·∫°n");
            systemPrompt.AppendLine("   - Nh·∫≠n email ch·ª©a th√¥ng tin ƒëƒÉng nh·∫≠p");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("2. S·ª¨ D·ª§NG H·ªÜ TH·ªêNG:");
            systemPrompt.AppendLine("   - ƒêƒÉng nh·∫≠p v·ªõi th√¥ng tin ƒë∆∞·ª£c cung c·∫•p");
            systemPrompt.AppendLine("   - ƒê·ªïi m·∫≠t kh·∫©u l·∫ßn ƒë·∫ßu");
            systemPrompt.AppendLine("   - Xem danh s√°ch l·ªõp ƒë∆∞·ª£c ph√¢n c√¥ng");
            systemPrompt.AppendLine("   - Xem l·ªãch d·∫°y theo tu·∫ßn");
            systemPrompt.AppendLine("   - Qu·∫£n l√Ω ho·∫°t ƒë·ªông h·ªçc t·∫≠p");
            systemPrompt.AppendLine("   - T∆∞∆°ng t√°c v·ªõi ph·ª• huynh");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("üë®‚Äçüíº CHO NH√ÇN S·ª∞ (HR):");
            systemPrompt.AppendLine("1. QU·∫¢N L√ù GI√ÅO VI√äN:");
            systemPrompt.AppendLine("   - T·∫°o t√†i kho·∫£n cho gi√°o vi√™n m·ªõi");
            systemPrompt.AppendLine("   - Ph√¢n quy·ªÅn v√† vai tr√≤");
            systemPrompt.AppendLine("   - Qu·∫£n l√Ω th√¥ng tin c√° nh√¢n");
            systemPrompt.AppendLine("   - Kh√≥a/m·ªü kh√≥a t√†i kho·∫£n khi c·∫ßn");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("2. QU·∫¢N L√ù H·ªÜ TH·ªêNG:");
            systemPrompt.AppendLine("   - Xem danh s√°ch t·∫•t c·∫£ t√†i kho·∫£n");
            systemPrompt.AppendLine("   - Qu·∫£n l√Ω quy·ªÅn truy c·∫≠p");
            systemPrompt.AppendLine("   - H·ªó tr·ª£ k·ªπ thu·∫≠t cho ng∆∞·ªùi d√πng");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("üë®‚Äçüíª CHO QU·∫¢N L√ù GI√ÅO D·ª§C:");
            systemPrompt.AppendLine("1. QU·∫¢N L√ù CH∆Ø∆†NG TR√åNH H·ªåC:");
            systemPrompt.AppendLine("   - T·∫°o ch∆∞∆°ng tr√¨nh h·ªçc m·ªõi");
            systemPrompt.AppendLine("   - C·∫≠p nh·∫≠t n·ªôi dung h·ªçc t·∫≠p");
            systemPrompt.AppendLine("   - Ph√™ duy·ªát ch∆∞∆°ng tr√¨nh");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("2. QU·∫¢N L√ù L·ªöP H·ªåC:");
            systemPrompt.AppendLine("   - T·∫°o l·ªõp h·ªçc m·ªõi");
            systemPrompt.AppendLine("   - Ph√¢n c√¥ng gi√°o vi√™n");
            systemPrompt.AppendLine("   - Qu·∫£n l√Ω sƒ© s·ªë l·ªõp");
            systemPrompt.AppendLine("   - T·∫°o l·ªãch h·ªçc cho t·ª´ng l·ªõp");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("3. QU·∫¢N L√ù ƒê·ª¢T TUY·ªÇN SINH:");
            systemPrompt.AppendLine("   - T·∫°o ƒë·ª£t tuy·ªÉn sinh m·ªõi");
            systemPrompt.AppendLine("   - Qu·∫£n l√Ω h·ªì s∆° ƒëƒÉng k√Ω");
            systemPrompt.AppendLine("   - X·ª≠ l√Ω thanh to√°n");
            systemPrompt.AppendLine("   - X√°c nh·∫≠n nh·∫≠p h·ªçc");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("=== C√ÅC B∆Ø·ªöC TH·ª∞C HI·ªÜN CHUNG ===");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("üîê ƒêƒÇNG NH·∫¨P:");
            systemPrompt.AppendLine("1. Truy c·∫≠p trang web PES");
            systemPrompt.AppendLine("2. Nh·∫•n 'ƒêƒÉng nh·∫≠p'");
            systemPrompt.AppendLine("3. Nh·∫≠p email v√† m·∫≠t kh·∫©u");
            systemPrompt.AppendLine("4. Nh·∫•n 'ƒêƒÉng nh·∫≠p'");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("üîë QU√äN M·∫¨T KH·∫®U:");
            systemPrompt.AppendLine("1. Nh·∫•n 'Qu√™n m·∫≠t kh·∫©u'");
            systemPrompt.AppendLine("2. Nh·∫≠p email ƒë√£ ƒëƒÉng k√Ω");
            systemPrompt.AppendLine("3. Ki·ªÉm tra email ƒë·ªÉ nh·∫≠n link reset");
            systemPrompt.AppendLine("4. Nh·∫•n link trong email");
            systemPrompt.AppendLine("5. Nh·∫≠p m·∫≠t kh·∫©u m·ªõi");
            systemPrompt.AppendLine("6. X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("üí≥ THANH TO√ÅN H·ªåC PH√ç:");
            systemPrompt.AppendLine("1. ƒêƒÉng nh·∫≠p t√†i kho·∫£n ph·ª• huynh");
            systemPrompt.AppendLine("2. V√†o m·ª•c 'Thanh to√°n'");
            systemPrompt.AppendLine("3. Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n VnPay");
            systemPrompt.AppendLine("4. ƒêi·ªÅn th√¥ng tin thanh to√°n");
            systemPrompt.AppendLine("5. X√°c nh·∫≠n giao d·ªãch");
            systemPrompt.AppendLine("6. Nh·∫≠n h√≥a ƒë∆°n ƒëi·ªán t·ª≠");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("=== H·ªñ TR·ª¢ V√Ä LI√äN H·ªÜ ===");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("üìû H·ªñ TR·ª¢ K·ª∏ THU·∫¨T:");
            systemPrompt.AppendLine("- Email: support@pes.edu.vn");
            systemPrompt.AppendLine("- Hotline: 1900-xxxx");
            systemPrompt.AppendLine("- Th·ªùi gian: 8:00 - 17:00 (Th·ª© 2 - Th·ª© 6)");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("üë®‚Äçüíº TUY·ªÇN D·ª§NG GI√ÅO VI√äN:");
            systemPrompt.AppendLine("- Email: hr@pes.edu.vn");
            systemPrompt.AppendLine("- Hotline: 1900-yyyy");
            systemPrompt.AppendLine("- ƒê·ªãa ch·ªâ: [ƒê·ªãa ch·ªâ tr∆∞·ªùng]");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("üìö H·ªñ TR·ª¢ GI√ÅO D·ª§C:");
            systemPrompt.AppendLine("- Email: education@pes.edu.vn");
            systemPrompt.AppendLine("- Hotline: 1900-zzzz");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("=== C√ÇU H·ªéI TH∆Ø·ªúNG G·∫∂P C·ª¶A PH·ª§ HUYNH ===");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("1. T√¥i c√≥ th·ªÉ ƒëƒÉng k√Ω nhi·ªÅu con trong c√πng m·ªôt t√†i kho·∫£n kh√¥ng?");
            systemPrompt.AppendLine("   ‚Üí C√≥, b·∫°n c√≥ th·ªÉ qu·∫£n l√Ω nhi·ªÅu con trong c√πng m·ªôt t√†i kho·∫£n ph·ª• huynh. V√†o m·ª•c 'Qu·∫£n l√Ω h·ªçc sinh' ƒë·ªÉ th√™m th√¥ng tin c√°c con kh√°c.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("2. L√†m sao ƒë·ªÉ ƒëƒÉng k√Ω nh·∫≠p h·ªçc cho con?");
            systemPrompt.AppendLine("   ‚Üí ƒêƒÉng nh·∫≠p t√†i kho·∫£n ‚Üí V√†o m·ª•c 'ƒêƒÉng k√Ω nh·∫≠p h·ªçc' ‚Üí T·∫°o h·ªì s∆° h·ªçc sinh ‚Üí Ch·ªçn ƒë·ª£t tuy·ªÉn sinh ‚Üí ƒêi·ªÅn ƒë∆°n ƒëƒÉng k√Ω ‚Üí Thanh to√°n h·ªçc ph√≠ ‚Üí Nh·∫≠n x√°c nh·∫≠n.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("3. T√¥i c√≥ th·ªÉ xem l·ªãch h·ªçc c·ªßa con kh√¥ng?");
            systemPrompt.AppendLine("   ‚Üí C√≥, sau khi con ƒë∆∞·ª£c x·∫øp l·ªõp, b·∫°n c√≥ th·ªÉ xem l·ªãch h·ªçc trong m·ª•c 'L·ªãch h·ªçc' ho·∫∑c li√™n h·ªá gi√°o vi√™n ƒë·ªÉ bi·∫øt l·ªãch h·ªçc chi ti·∫øt.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("4. L√†m sao ƒë·ªÉ thanh to√°n h·ªçc ph√≠?");
            systemPrompt.AppendLine("   ‚Üí V√†o m·ª•c 'Thanh to√°n' ‚Üí Ch·ªçn con ‚Üí Ch·ªçn k·ª≥ h·ªçc ‚Üí Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n VnPay ‚Üí ƒêi·ªÅn th√¥ng tin ‚Üí X√°c nh·∫≠n thanh to√°n ‚Üí Nh·∫≠n h√≥a ƒë∆°n.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("5. T√¥i c√≥ th·ªÉ xem l·ªãch s·ª≠ thanh to√°n kh√¥ng?");
            systemPrompt.AppendLine("   ‚Üí C√≥, v√†o m·ª•c 'L·ªãch s·ª≠ thanh to√°n' ƒë·ªÉ xem t·∫•t c·∫£ c√°c giao d·ªãch ƒë√£ th·ª±c hi·ªán, bao g·ªìm ng√†y thanh to√°n, s·ªë ti·ªÅn v√† tr·∫°ng th√°i.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("6. L√†m sao ƒë·ªÉ c·∫≠p nh·∫≠t th√¥ng tin c√° nh√¢n?");
            systemPrompt.AppendLine("   ‚Üí V√†o m·ª•c 'H·ªì s∆° c√° nh√¢n' ‚Üí Nh·∫•n 'Ch·ªânh s·ª≠a' ‚Üí C·∫≠p nh·∫≠t th√¥ng tin nh∆∞ t√™n, s·ªë ƒëi·ªán tho·∫°i, ƒë·ªãa ch·ªâ ‚Üí Nh·∫•n 'L∆∞u' ƒë·ªÉ ho√†n t·∫•t.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("7. T√¥i c√≥ th·ªÉ xem th√¥ng tin l·ªõp h·ªçc c·ªßa con kh√¥ng?");
            systemPrompt.AppendLine("   ‚Üí C√≥, sau khi con ƒë∆∞·ª£c x·∫øp l·ªõp, b·∫°n c√≥ th·ªÉ xem th√¥ng tin l·ªõp h·ªçc trong m·ª•c 'Th√¥ng tin l·ªõp h·ªçc' bao g·ªìm t√™n l·ªõp, gi√°o vi√™n ch·ªß nhi·ªám.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("8. L√†m sao ƒë·ªÉ xem ch∆∞∆°ng tr√¨nh h·ªçc c·ªßa con?");
            systemPrompt.AppendLine("   ‚Üí V√†o m·ª•c 'Ch∆∞∆°ng tr√¨nh h·ªçc' ƒë·ªÉ xem c√°c m√¥n h·ªçc, n·ªôi dung h·ªçc t·∫≠p v√† k·∫ø ho·∫°ch gi√°o d·ª•c c·ªßa t·ª´ng l·ªõp.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("9. T√¥i c√≥ th·ªÉ xem ho·∫°t ƒë·ªông h·ªçc t·∫≠p c·ªßa con kh√¥ng?");
            systemPrompt.AppendLine("   ‚Üí C√≥, v√†o m·ª•c 'Ho·∫°t ƒë·ªông h·ªçc t·∫≠p' ƒë·ªÉ xem c√°c ho·∫°t ƒë·ªông, b√†i t·∫≠p v√† d·ª± √°n m√† con tham gia trong l·ªõp h·ªçc.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("10. L√†m sao ƒë·ªÉ xem l·ªãch h·ªçc theo tu·∫ßn?");
            systemPrompt.AppendLine("    ‚Üí V√†o m·ª•c 'L·ªãch h·ªçc' ‚Üí Ch·ªçn 'Xem theo tu·∫ßn' ‚Üí Ch·ªçn tu·∫ßn mu·ªën xem ‚Üí Xem l·ªãch h·ªçc chi ti·∫øt t·ª´ th·ª© 2 ƒë·∫øn ch·ªß nh·∫≠t.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("11. T√¥i c√≥ th·ªÉ xem th√¥ng tin ƒë·ª£t tuy·ªÉn sinh kh√¥ng?");
            systemPrompt.AppendLine("    ‚Üí C√≥, v√†o m·ª•c 'ƒê·ª£t tuy·ªÉn sinh' ƒë·ªÉ xem c√°c ƒë·ª£t tuy·ªÉn sinh ƒëang m·ªü, th·ªùi gian ƒëƒÉng k√Ω v√† y√™u c·∫ßu nh·∫≠p h·ªçc.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("12. L√†m sao ƒë·ªÉ ƒë·ªïi m·∫≠t kh·∫©u?");
            systemPrompt.AppendLine("    ‚Üí V√†o m·ª•c 'C√†i ƒë·∫∑t t√†i kho·∫£n' ‚Üí Ch·ªçn 'ƒê·ªïi m·∫≠t kh·∫©u' ‚Üí Nh·∫≠p m·∫≠t kh·∫©u c≈© ‚Üí Nh·∫≠p m·∫≠t kh·∫©u m·ªõi ‚Üí X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi ‚Üí Nh·∫•n 'L∆∞u'.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("13. T√¥i qu√™n m·∫≠t kh·∫©u th√¨ l√†m sao?");
            systemPrompt.AppendLine("    ‚Üí Tr√™n trang ƒëƒÉng nh·∫≠p, nh·∫•n 'Qu√™n m·∫≠t kh·∫©u' ‚Üí Nh·∫≠p email ƒë√£ ƒëƒÉng k√Ω ‚Üí Ki·ªÉm tra email ƒë·ªÉ nh·∫≠n link reset ‚Üí Nh·∫•n link trong email ‚Üí Nh·∫≠p m·∫≠t kh·∫©u m·ªõi.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("14. L√†m sao ƒë·ªÉ xem th√¥ng tin t√†i kho·∫£n c·ªßa t√¥i?");
            systemPrompt.AppendLine("    ‚Üí V√†o m·ª•c 'H·ªì s∆° c√° nh√¢n' ƒë·ªÉ xem th√¥ng tin t√†i kho·∫£n bao g·ªìm t√™n, email, s·ªë ƒëi·ªán tho·∫°i, ƒë·ªãa ch·ªâ v√† ng√†y t·∫°o t√†i kho·∫£n.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("15. T√¥i c√≥ th·ªÉ xem danh s√°ch t·∫•t c·∫£ l·ªõp h·ªçc kh√¥ng?");
            systemPrompt.AppendLine("    ‚Üí C√≥, v√†o m·ª•c 'Danh s√°ch l·ªõp h·ªçc' ƒë·ªÉ xem t·∫•t c·∫£ c√°c l·ªõp h·ªçc trong tr∆∞·ªùng, bao g·ªìm t√™n l·ªõp, sƒ© s·ªë v√† gi√°o vi√™n ch·ªß nhi·ªám.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("16. L√†m sao ƒë·ªÉ xem l·ªãch h·ªçc c·ªßa m·ªôt l·ªõp c·ª• th·ªÉ?");
            systemPrompt.AppendLine("    ‚Üí V√†o m·ª•c 'Danh s√°ch l·ªõp h·ªçc' ‚Üí Ch·ªçn l·ªõp mu·ªën xem ‚Üí Nh·∫•n 'Xem l·ªãch h·ªçc' ‚Üí Xem l·ªãch h·ªçc chi ti·∫øt c·ªßa l·ªõp ƒë√≥.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("17. T√¥i c√≥ th·ªÉ xem th√¥ng tin gi√°o vi√™n c·ªßa con kh√¥ng?");
            systemPrompt.AppendLine("    ‚Üí C√≥, trong m·ª•c 'Th√¥ng tin l·ªõp h·ªçc' c·ªßa con, b·∫°n c√≥ th·ªÉ xem th√¥ng tin gi√°o vi√™n ch·ªß nhi·ªám v√† c√°c gi√°o vi√™n b·ªô m√¥n.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("18. L√†m sao ƒë·ªÉ li√™n h·ªá v·ªõi nh√† tr∆∞·ªùng?");
            systemPrompt.AppendLine("    ‚Üí B·∫°n c√≥ th·ªÉ li√™n h·ªá qua email support@pes.edu.vn, hotline 1900-xxxx ho·∫∑c ƒë·∫øn tr·ª±c ti·∫øp vƒÉn ph√≤ng tr∆∞·ªùng ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("19. T√¥i c√≥ th·ªÉ xem tr·∫°ng th√°i ƒë∆°n ƒëƒÉng k√Ω nh·∫≠p h·ªçc kh√¥ng?");
            systemPrompt.AppendLine("    ‚Üí C√≥, v√†o m·ª•c 'ƒê∆°n ƒëƒÉng k√Ω' ƒë·ªÉ xem tr·∫°ng th√°i ƒë∆°n ƒëƒÉng k√Ω nh·∫≠p h·ªçc c·ªßa con, bao g·ªìm tr·∫°ng th√°i x·ª≠ l√Ω v√† th√¥ng b√°o t·ª´ tr∆∞·ªùng.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("20. L√†m sao ƒë·ªÉ bi·∫øt con t√¥i ƒë√£ ƒë∆∞·ª£c x·∫øp l·ªõp ch∆∞a?");
            systemPrompt.AppendLine("    ‚Üí V√†o m·ª•c 'Th√¥ng tin l·ªõp h·ªçc' ƒë·ªÉ ki·ªÉm tra xem con b·∫°n ƒë√£ ƒë∆∞·ª£c x·∫øp v√†o l·ªõp n√†o ch∆∞a. N·∫øu ch∆∞a x·∫øp l·ªõp, h·ªá th·ªëng s·∫Ω hi·ªÉn th·ªã 'Ch·ªù x·∫øp l·ªõp'.");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("=== V√ç D·ª§ TR·∫¢ L·ªúI LINH HO·∫†T ===");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("Khi ng∆∞·ªùi d√πng h·ªèi: 'Con t√¥i nƒÉng ƒë·ªông, th√≠ch th·ªÉ thao th√¨ n√™n h·ªçc l·ªõp n√†o?'");
            systemPrompt.AppendLine("‚Üí Ph√¢n t√≠ch: Ng∆∞·ªùi d√πng mu·ªën t√¨m l·ªõp ph√π h·ª£p v·ªõi t√≠nh c√°ch nƒÉng ƒë·ªông c·ªßa con");
            systemPrompt.AppendLine("‚Üí Tr·∫£ l·ªùi: 'V·ªõi t√≠nh c√°ch nƒÉng ƒë·ªông v√† y√™u th√≠ch th·ªÉ thao, t√¥i khuy√™n b·∫°n n√™n:");
            systemPrompt.AppendLine("  1. Xem m·ª•c 'Ch∆∞∆°ng tr√¨nh h·ªçc' ƒë·ªÉ t√¨m c√°c l·ªõp c√≥ ho·∫°t ƒë·ªông th·ªÉ thao");
            systemPrompt.AppendLine("  2. Li√™n h·ªá gi√°o vi√™n th·ªÉ d·ª•c ƒë·ªÉ t√¨m hi·ªÉu v·ªÅ c√°c c√¢u l·∫°c b·ªô th·ªÉ thao");
            systemPrompt.AppendLine("  3. Tham kh·∫£o m·ª•c 'Ho·∫°t ƒë·ªông ngo·∫°i kh√≥a' ƒë·ªÉ xem c√°c ho·∫°t ƒë·ªông ph√π h·ª£p");
            systemPrompt.AppendLine("  4. Trao ƒë·ªïi v·ªõi gi√°o vi√™n ch·ªß nhi·ªám v·ªÅ t√≠nh c√°ch c·ªßa con ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n l·ªõp ph√π h·ª£p'");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("Khi ng∆∞·ªùi d√πng h·ªèi: 'Con t√¥i h·ªçc k√©m m√¥n to√°n, l√†m sao ƒë·ªÉ c·∫£i thi·ªán?'");
            systemPrompt.AppendLine("‚Üí Ph√¢n t√≠ch: Ng∆∞·ªùi d√πng c·∫ßn h·ªó tr·ª£ h·ªçc t·∫≠p cho con");
            systemPrompt.AppendLine("‚Üí Tr·∫£ l·ªùi: 'ƒê·ªÉ c·∫£i thi·ªán m√¥n to√°n cho con, b·∫°n c√≥ th·ªÉ:");
            systemPrompt.AppendLine("  1. Xem m·ª•c 'Ho·∫°t ƒë·ªông h·ªçc t·∫≠p' ƒë·ªÉ t√¨m c√°c b√†i t·∫≠p to√°n b·ªï sung");
            systemPrompt.AppendLine("  2. Li√™n h·ªá gi√°o vi√™n to√°n ƒë·ªÉ ƒë∆∞·ª£c h∆∞·ªõng d·∫´n ph∆∞∆°ng ph√°p h·ªçc");
            systemPrompt.AppendLine("  3. Tham kh·∫£o m·ª•c 'Ch∆∞∆°ng tr√¨nh h·ªçc' ƒë·ªÉ hi·ªÉu n·ªôi dung to√°n theo t·ª´ng l·ªõp");
            systemPrompt.AppendLine("  4. Trao ƒë·ªïi v·ªõi gi√°o vi√™n ch·ªß nhi·ªám v·ªÅ t√¨nh h√¨nh h·ªçc t·∫≠p c·ªßa con'");
            systemPrompt.AppendLine();
            systemPrompt.AppendLine("=== NGUY√äN T·∫ÆC TR·∫¢ L·ªúI ===");
            systemPrompt.AppendLine("1. Lu√¥n ph√¢n t√≠ch √Ω ƒë·ªãnh th·ª±c s·ª± c·ªßa c√¢u h·ªèi");
            systemPrompt.AppendLine("2. ƒê∆∞a ra nhi·ªÅu l·ª±a ch·ªçn v√† g·ª£i √Ω c·ª• th·ªÉ");
            systemPrompt.AppendLine("3. K·∫øt h·ª£p th√¥ng tin t·ª´ nhi·ªÅu m·ª•c trong h·ªá th·ªëng");
            systemPrompt.AppendLine("4. C√° nh√¢n h√≥a c√¢u tr·∫£ l·ªùi d·ª±a tr√™n t√¨nh hu·ªëng");
            systemPrompt.AppendLine("5. ƒê∆∞a ra c√°c b∆∞·ªõc h√†nh ƒë·ªông c·ª• th·ªÉ");
            systemPrompt.AppendLine("6. Lu√¥n k·∫øt th√∫c b·∫±ng l·ªùi khuy√™n li√™n h·ªá v·ªõi gi√°o vi√™n khi c·∫ßn");
            systemPrompt.AppendLine();

            return systemPrompt.ToString();
        }

        private List<string> ExtractRelatedTopics(string message)
        {
            var topics = new List<string>();
            var lowerMessage = message.ToLower();

            if (lowerMessage.Contains("ƒëƒÉng k√Ω") || lowerMessage.Contains("register"))
                topics.Add("ƒêƒÉng k√Ω t√†i kho·∫£n");
            
            if (lowerMessage.Contains("ƒëƒÉng nh·∫≠p") || lowerMessage.Contains("login"))
                topics.Add("ƒêƒÉng nh·∫≠p");
            
            if (lowerMessage.Contains("m·∫≠t kh·∫©u") || lowerMessage.Contains("password"))
                topics.Add("Qu·∫£n l√Ω m·∫≠t kh·∫©u");
            
            if (lowerMessage.Contains("ph·ª• huynh") || lowerMessage.Contains("parent"))
                topics.Add("Qu·∫£n l√Ω ph·ª• huynh");
            
            if (lowerMessage.Contains("gi√°o vi√™n") || lowerMessage.Contains("teacher"))
                topics.Add("Qu·∫£n l√Ω gi√°o vi√™n");
            
            if (lowerMessage.Contains("h·ªçc sinh") || lowerMessage.Contains("student"))
                topics.Add("Qu·∫£n l√Ω h·ªçc sinh");
            
            if (lowerMessage.Contains("l·ªõp h·ªçc") || lowerMessage.Contains("class"))
                topics.Add("Qu·∫£n l√Ω l·ªõp h·ªçc");
            
            if (lowerMessage.Contains("l·ªãch h·ªçc") || lowerMessage.Contains("schedule"))
                topics.Add("Qu·∫£n l√Ω l·ªãch h·ªçc");
            
            if (lowerMessage.Contains("ch∆∞∆°ng tr√¨nh") || lowerMessage.Contains("syllabus"))
                topics.Add("Ch∆∞∆°ng tr√¨nh h·ªçc");
            
            if (lowerMessage.Contains("thanh to√°n") || lowerMessage.Contains("payment"))
                topics.Add("Thanh to√°n h·ªçc ph√≠");

            return topics;
        }

        private string? GenerateSuggestedActions(string message, string? userRole)
        {
            var lowerMessage = message.ToLower();
            var actions = new List<string>();

            // Ph√¢n t√≠ch t√≠nh c√°ch v√† s·ªü th√≠ch
            if (lowerMessage.Contains("nƒÉng ƒë·ªông") || lowerMessage.Contains("th·ªÉ thao") || lowerMessage.Contains("ho·∫°t ƒë·ªông"))
            {
                actions.Add("Xem m·ª•c 'Ch∆∞∆°ng tr√¨nh h·ªçc' ƒë·ªÉ t√¨m l·ªõp c√≥ ho·∫°t ƒë·ªông th·ªÉ thao");
                actions.Add("Tham kh·∫£o m·ª•c 'Ho·∫°t ƒë·ªông ngo·∫°i kh√≥a'");
                actions.Add("Li√™n h·ªá gi√°o vi√™n th·ªÉ d·ª•c ƒë·ªÉ t∆∞ v·∫•n");
            }

            if (lowerMessage.Contains("h·ªçc k√©m") || lowerMessage.Contains("c·∫£i thi·ªán") || lowerMessage.Contains("h·ªó tr·ª£ h·ªçc"))
            {
                actions.Add("Xem m·ª•c 'Ho·∫°t ƒë·ªông h·ªçc t·∫≠p' ƒë·ªÉ t√¨m b√†i t·∫≠p b·ªï sung");
                actions.Add("Li√™n h·ªá gi√°o vi√™n b·ªô m√¥n ƒë·ªÉ ƒë∆∞·ª£c h∆∞·ªõng d·∫´n");
                actions.Add("Trao ƒë·ªïi v·ªõi gi√°o vi√™n ch·ªß nhi·ªám v·ªÅ t√¨nh h√¨nh h·ªçc t·∫≠p");
            }

            if (lowerMessage.Contains("l·ªõp n√†o") || lowerMessage.Contains("ph√π h·ª£p") || lowerMessage.Contains("t√≠nh c√°ch"))
            {
                actions.Add("Xem m·ª•c 'Danh s√°ch l·ªõp h·ªçc' ƒë·ªÉ t√¨m l·ªõp ph√π h·ª£p");
                actions.Add("Tham kh·∫£o m·ª•c 'Ch∆∞∆°ng tr√¨nh h·ªçc' ƒë·ªÉ hi·ªÉu n·ªôi dung t·ª´ng l·ªõp");
                actions.Add("Trao ƒë·ªïi v·ªõi gi√°o vi√™n ch·ªß nhi·ªám ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n");
            }

            // C√°c ch·ª©c nƒÉng c∆° b·∫£n
            if (lowerMessage.Contains("ƒëƒÉng k√Ω"))
            {
                if (userRole == "HR")
                    actions.Add("Li√™n h·ªá b·ªô ph·∫≠n nh√¢n s·ª± ƒë·ªÉ t·∫°o t√†i kho·∫£n gi√°o vi√™n");
                else
                    actions.Add("Truy c·∫≠p trang web PES v√† nh·∫•n 'ƒêƒÉng k√Ω ph·ª• huynh'");
            }

            if (lowerMessage.Contains("ƒëƒÉng nh·∫≠p"))
                actions.Add("Truy c·∫≠p trang web PES v√† nh·∫•n 'ƒêƒÉng nh·∫≠p'");

            if (lowerMessage.Contains("m·∫≠t kh·∫©u"))
            {
                actions.Add("Nh·∫•n 'Qu√™n m·∫≠t kh·∫©u' tr√™n trang ƒëƒÉng nh·∫≠p");
                actions.Add("Ki·ªÉm tra email ƒë·ªÉ nh·∫≠n link reset");
            }

            if (lowerMessage.Contains("l·ªõp h·ªçc") && userRole == "TEACHER")
                actions.Add("ƒêƒÉng nh·∫≠p v√† v√†o m·ª•c 'L·ªõp h·ªçc c·ªßa t√¥i'");

            if (lowerMessage.Contains("l·ªãch h·ªçc") && userRole == "TEACHER")
                actions.Add("ƒêƒÉng nh·∫≠p v√† v√†o m·ª•c 'L·ªãch d·∫°y'");

            if (lowerMessage.Contains("thanh to√°n"))
                actions.Add("ƒêƒÉng nh·∫≠p t√†i kho·∫£n ph·ª• huynh v√† v√†o m·ª•c 'Thanh to√°n'");

            // G·ª£i √Ω chung cho m·ªçi t√¨nh hu·ªëng
            if (actions.Count == 0)
            {
                actions.Add("Li√™n h·ªá gi√°o vi√™n ch·ªß nhi·ªám ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n chi ti·∫øt");
                actions.Add("Tham kh·∫£o m·ª•c 'H·ªó tr·ª£' ƒë·ªÉ t√¨m th√¥ng tin li√™n quan");
            }

            return actions.Count > 0 ? string.Join("; ", actions) : null;
        }
    }

    // Helper classes for Gemini API response
    public class GeminiResponse
    {
        public Candidate[] candidates { get; set; } = Array.Empty<Candidate>();
    }

    public class Candidate
    {
        public Content content { get; set; } = new();
    }

    public class Content
    {
        public Part[] parts { get; set; } = Array.Empty<Part>();
    }

    public class Part
    {
        public string text { get; set; } = string.Empty;
    }
}
