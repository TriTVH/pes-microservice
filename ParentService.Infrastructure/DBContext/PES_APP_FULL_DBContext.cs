// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ParentService.Infrastructure.Models;

public partial class PES_APP_FULL_DBContext : DbContext
{
    public PES_APP_FULL_DBContext(DbContextOptions<PES_APP_FULL_DBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AdmissionForm> AdmissionForms { get; set; }

    public virtual DbSet<AdmissionFormClass> AdmissionFormClasses { get; set; }

    public virtual DbSet<Student> Students { get; set; }

    public virtual DbSet<StudentClass> StudentClasses { get; set; }

    public virtual DbSet<Transaction> Transactions { get; set; }

    public virtual DbSet<TransactionItem> TransactionItems { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AdmissionForm>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__admissio__3213E83FC654F923");

            entity.ToTable("admission_form");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AdmissionTermId).HasColumnName("admission_term_id");
            entity.Property(e => e.ApprovedDate)
                .HasPrecision(6)
                .HasColumnName("approved_date");
            entity.Property(e => e.CancelReason)
                .HasMaxLength(255)
                .HasColumnName("cancel_reason");
            entity.Property(e => e.Note)
                .HasMaxLength(50)
                .HasColumnName("note");
            entity.Property(e => e.ParentAccountId).HasColumnName("parent_account_id");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("status");
            entity.Property(e => e.StudentId).HasColumnName("student_id");
            entity.Property(e => e.SubmittedDate)
                .HasPrecision(6)
                .HasColumnName("submitted_date");

            entity.HasOne(d => d.Student).WithMany(p => p.AdmissionForms)
                .HasForeignKey(d => d.StudentId)
                .OnDelete(DeleteBehavior.Cascade) // 👈 Add this lin
                .HasConstraintName("FK_admission_form_student");
        });

        modelBuilder.Entity<AdmissionFormClass>(entity =>
        {
            entity.HasKey(e => new { e.AdmissionFormId, e.ClassId });

            entity.ToTable("Admission_form_class");

            entity.Property(e => e.AdmissionFormId).HasColumnName("admission_form_id");
            entity.Property(e => e.ClassId).HasColumnName("class_id");

            entity.HasOne(d => d.AdmissionForm).WithMany(p => p.AdmissionFormClasses)
                .HasForeignKey(d => d.AdmissionFormId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_Admission_form_class_admission_form");
        });

        modelBuilder.Entity<Student>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__student__3213E83FCD4F6AD1");

            entity.ToTable("student");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.BirthCertificateImg)
                .HasMaxLength(255)
                .HasColumnName("birth_certificate_img");
            entity.Property(e => e.DateOfBirth).HasColumnName("date_of_birth");
            entity.Property(e => e.Gender)
                .HasMaxLength(50)
                .HasColumnName("gender");
            entity.Property(e => e.HouseholdRegistrationImg)
                .HasMaxLength(254)
                .HasColumnName("household_registration_img");
            entity.Property(e => e.Name)
                .HasMaxLength(100)
                .HasColumnName("name");
            entity.Property(e => e.IsStudent)
            .HasColumnName("isStudent");
            entity.Property(e => e.ParentAccId).HasColumnName("parent_acc_id");
            entity.Property(e => e.PlaceOfBirth)
                .HasMaxLength(100)
                .HasColumnName("place_of_birth");
            entity.Property(e => e.ProfileImage)
                .HasMaxLength(255)
                .HasColumnName("profile_image");
        });

        modelBuilder.Entity<StudentClass>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__student___3213E83F85939150");

            entity.ToTable("student_class");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ClassesId).HasColumnName("classes_id");
            entity.Property(e => e.StudentId).HasColumnName("student_id");

            entity.HasOne(d => d.Student).WithMany(p => p.StudentClasses)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK_student_class_student");
        });

        modelBuilder.Entity<Transaction>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__transact__3213E83FCA2A56A6");

            entity.ToTable("transactions");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Amount).HasColumnName("amount");
            entity.Property(e => e.Description)
                .HasMaxLength(800)
                .HasColumnName("description");
            entity.Property(e => e.TxnRef)
                .HasMaxLength(100)
                .HasColumnName("txnRef");
            entity.Property(e => e.FormId)
                .HasColumnName("form_id");
            entity.Property(e => e.PaymentDate).HasColumnName("payment_date");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("status");

            entity.HasMany(t => t.TransactionItems)
        .WithOne(ti => ti.Transaction)
        .HasForeignKey(ti => ti.TransactionId)
        .OnDelete(DeleteBehavior.Cascade);
        });

        modelBuilder.Entity<TransactionItem>(entity =>
        {
            entity.ToTable("transaction_items");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cost).HasColumnName("cost");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(250)
                .HasColumnName("name");
            entity.Property(e => e.TransactionId).HasColumnName("transaction_id");

        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}